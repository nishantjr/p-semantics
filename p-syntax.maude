in "builtins.maude" .

( mod P-SYNTAX is including PL-INT .

    --- Probably need a better way to define Ids
    sort Id .
    ops a b c d e f g h i j k l m n o p q r s t u v w x y z : -> Id [ctor] .
    ops this foo eFoo bar eBar buzz : -> Id .

    sort Type .
    ops Int int : -> Type .

    --- Expressions
    sort Exp .
    subsort Int < Exp .
    subsort Id < Exp .

    op _+_ : Exp Exp -> Exp [prec 33 gather (E e) format (d b o d)] .
    op _/_ : Exp Exp -> Exp [prec 31 gather (E e) format (d b o d)] .

    subsort Bool < Exp .
    op _<=_ : Exp Exp -> Exp  [prec 37 format (d b o d)] .
    op _>=_ : Exp Exp -> Exp  [prec 37 format (d b o d)] .
    op _<_ : Exp Exp -> Exp  [prec 37 format (d b o d)] .
    op _>_ : Exp Exp -> Exp  [prec 37 format (d b o d)] .
    op !_ : Exp -> Exp [prec 53 format (b o d)] .
    op _&&_ : Exp Exp -> Exp [prec 55 gather (E e) format (d b o d)] .

    --- Machines
    op machine_;_ : Id Block -> Stmt .
    op machine_sends_;_ : Id Exps Block -> Stmt .

    --- Variable Type Expressions
    op _:_ : Id Type -> Exp [prec 35 format (d d g o)] .

    --- Expression Lists
    sort Exps .
    subsort Exp < Exps .

    --- op .Exps : -> Exps .
  ---  op _,_ : Exps Exps -> Exps [ assoc id: .Exps ] .

    --- Assignment Exp
    op _=_ : Id Exp -> Exp [prec 39 format (d b o o)] .

    --- This Expression
    op _to_ : Id Type -> Exp [prec 38] .

    --- Attributes Expression
    --- op _._ : Exp Exp -> Exp [prec 38] .

    --- Object Creation
    op new_(_) : Id Exps -> Exp [prec 38] .

    --- sorts Block Stmt .
    --- subsort Block < Stmt .

    --- op {} : -> Block [format (b b o)] .
    --- op {_} : Stmt -> Block [format (d n++i n--i d)] .
    --- op _; : Exp -> Stmt [prec 40] .
    --- op __ : Stmt Stmt -> Stmt [prec 60 gather (e E) format (d ni d)] .

    --- --- Variable Statements
    --- op var_;   : Exp -> Stmt [prec 40 format (y o o o)] .

    --- --- Event Statements
    --- op event_ : Id -> Stmt  [prec 40 format (r o o)] .

    --- --- State Statements
    --- op state__ : Id Block -> Stmt [prec 40 format (d r o d)] .
    --- op start state__ : Id Block -> Stmt [prec 39 format (d d r o d)] .

    --- --- Entry Statements
    --- op entry_ : Block -> Stmt [prec 40] .
    --- op entry(_)_ : Exp Block -> Stmt [prec 40] .

    --- --- Action Statements
    --- op on_do_ : Id Stmt -> Stmt [prec 40 format (d r o d d)] .
    --- op on_do(_)_ : Id Exp Block -> Stmt [prec 40 format (d r o d d d d d)] .

    --- --- Stmts
    --- op goto_; : Id -> Stmt [format (o r o o)] .
    --- op send_; : Exps -> Stmt [prec 41] .

    --- --- Jumps
    --- op if(_)_else_ : Exp Stmt Stmt -> Stmt [prec 59 format (b so d d s nib o d)] .
    --- op while(_)_ : Exp Block -> Stmt [prec 59 format (b so d d o d)] .

    --- --- Asserts
    --- op assert(_); : Exp -> Stmt [format (b o d d d d)] .

  endm )
